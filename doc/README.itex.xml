<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="docbook.xsl"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook MathML Module V1.0//EN"
  "http://www.docbook.org/xml/mathml/1.0/dbmathml.dtd">

<!-- DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
     "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [] -->
<article lang="en">
  <articleinfo>
    <title><application>BAli-Phy</application> User's Guide</title>
    <author>
      <firstname>Benjamin</firstname>
      <surname>Redelings</surname>
    </author>
  </articleinfo>

  <sect1>
    <title>Pre-requisites</title>

      <sect2>
	<title>Hardware Requirements</title>

	<para><application>BAli-Phy</application> should be able to
	run on any hardware with a modern operating system, including
	Linux or UNIX, Windows, and Mac OS X.</para>

	<para>We recommend at least 512Mb of RAM and a 1.5GHz
	processor.  We typically run
	<application>BAli-Phy</application> on Pentium 4 processors
	with 1Gb of RAM and a 3 GHz processor.</para> 
      </sect2>

      <sect2>
	<title>Operating System requirements</title>

	<sect3>
	  <title>Linux and UNIX</title>

	  <para>A Linux or UNIX system should be able to install and
	  run <application>BAli-Phy</application> without any modification.</para>
	</sect3>

	<sect3>
	  <title>Windows</title>

	  <para>On Windows you must first install <ulink
	  url="http://www.cygwin.com">cygwin</ulink>.  Cygwin is a
	  Linux environment for Windows, and includes GCC, GNU make,
	  and other software.  You can access the Cygwin command line (not
	  the normal windows command line) through the Start menu.</para>
	</sect3>

	<sect3>
	  <title>Mac OS X</title>

	  <para>A Mac OS X system is based on UNIX, and should be able to
	  compile and run <application>BAli-Phy</application>.  The version
	  of OS X must be 10.1 or higher.  If you want to use the
	  development tools from Apple to compile
	  <application>BAli-Phy</application>, the system must be 10.4 or
	  higher, and you must upgrade to XCode 2.2 (see Software
	  Requirements). 
	  </para>
	</sect3>

      </sect2>

      <sect2>
	<title>Software Requirements</title>

	<sect3>
	  <title>Compilation Requirements</title>

	<para>The following software packages are required for compiling BAli-Phy:

	<itemizedlist>
	  <listitem><para> A modern C++ compiler (<ulink
	  url="http://gcc.gnu.org">GCC</ulink> version 3.4, 4.0, and 4.1 are known to work)</para></listitem>
	  <listitem><para>GNU make version 3.80 or higher  (<ulink
	  url="http://www.gnu.org/software/make">GNU make</ulink>).
	  </para></listitem>
	  <listitem><para> The GNU Scientific Library (<ulink url="http://sources.redhat.com/gsl/">GSL</ulink>)</para></listitem>
	  <listitem><para> The BOOST C++ Library (<ulink
	  url="http://www.boost.org">BOOST</ulink>) version 1.32 or higher.</para></listitem>
	</itemizedlist>
	</para>

	<note>
	<title>Mac OS X issues:</title>

	<para>If you want to use the development tools shipped by Apple
	(e.g. GCC) then you need OS X version 10.4 (Tiger) or higher, and
	you need to install XCode 2.2.  (You can use a GCC compiler
	built from the non-apple FSF sources, but installing XCode is
	much simpler.) 
	</para>

	<para><ulink url="http://fink.sourceforge.net">Fink</ulink>
	provides Linux software for Mac OS X.  You may use it to install
	the GSL library and include files, but the BOOST libraries that
	come with fink <emphasis>will not work</emphasis>, because they are
	compiled with GCC 3.3. You must therefore compile the BOOST
	libraries yourself, using GCC 3.4 or higher.</para>
	</note>
	</sect3>

	<sect3>
	  <title>Analysis and Documentation Requirements</title>
	<para>In addition, the following software packages are recommended,
	although not required:
	<itemizedlist>
	  <listitem><para>The plotting program
	  <application>gnuplot</application> (<ulink
	  url="http://www.gnuplot.info/">gnuplot</ulink>)</para></listitem> 
	  <listitem><para>GNU make version 3.80 or higher  (<ulink
	  url="http://www.gnu.org/software/make">GNU make</ulink>).
	  </para></listitem>
	  <listitem><para>Mozilla or Mozilla/Firefox to view the math in
	  the XHTML documentation. (<ulink url="http://www.mozilla.org/products/firefox/">Firefox</ulink>)</para></listitem>
	</itemizedlist>
	</para>
	</sect3>

    </sect2>
  </sect1>
    <sect1>
      <title>Compiling <application>BAli-Phy</application></title>

      <sect2>
	<title>Quick Start</title>
      <para>In order to compile the program on UNIX, first
      extract the source code archive, using a graphical archive
      manager, or the command-line tool <command>tar</command>:
      
      <screen><prompt>%</prompt> <userinput>tar -zxf bali-phy-1.9.8.tgz</userinput></screen>
      Then create a build directory, enter it, and run the
      configure command:

      <screen><prompt>%</prompt> <userinput>mkdir build</userinput>
<prompt>%</prompt> <userinput>cd build</userinput>
<prompt>%</prompt> <userinput>../bali-phy-1.9.8/configure</userinput></screen>
 
      If this command succeeds, then you can simply type

      <screen><prompt>%</prompt> <userinput>make install</userinput></screen>

      to build and install <command>bali-phy</command> and its
      associated tools.  (This requires GNU <command>make</command>.)
      To customize the compilation and installation process, read the
      following sections on supplying arguments to the
      <command>configure</command> script.
      </para>
      </sect2>

      <sect2>
	<title>Installing to a location besides	<filename>/usr/local/</filename></title>
	<para>The configure script chooses to install
	<command>bali-phy</command> in the directory
	<filename>/usr/local/</filename> by default.  However, if you
	do have superuser access, you may not be able to install in
	this directory.  An alternative is to install
	<command>bali-phy</command> to ~/local/ in your home directory.</para>
      </sect2>

      <sect2>
	<title>Selecting a non-default C++ compiler</title>
	
	<para>The default C++ compiler is <command>g++</command>.  On
	some systems, <command>g++</command> invokes GCC version 3.3,
	and the correct compiler is called something else, such as
	<command>g++-4.0</command>.  To use
	<command>g++-4.0</command> as the C++ compiler when compiling
	<application>BAli-Phy</application>, you can set the CXX
	environment variable as follows:
	    <screen><prompt>%</prompt> <userinput>CXX=g++-4.0 make install</userinput></screen>
	    To change this, or to change other compilation options,
	edit the makefile <filename>src/GNUmakefile</filename>.</para> 
      </sect2>

      <sect2>
	<title>Optimizing for a specific architecture</title>
	<para>On ix86 computers, you can add either
	<userinput>ARCH=pentium3</userinput>,
	<userinput>ARCH=pentium4</userinput>, or
	<userinput>ARCH=athlon-xp</userinput> to the beginning of the
	command line. This allows the compiler to generate faster code 
	that only works on the specified architecture.
	</para>
      </sect2>

      <sect2>
	<title>Statically linked executables</title>
	<para>Call <command>configure</command> with the flag
	<userinput>--enable-static</userinput> to build static
	executables.  They will run ofter run on other computers 
	with the same CPU but slightly different versions of the
	operating system.
	</para> 
      </sect2>
	    

      <sect2>
	<title>Examples</title>
	<para>A
	</para>
      </sect2>
  </sect1>

  <sect1>
    <title>Installation</title>
    <para></para>
  </sect1>

  <sect1>
    <title>Running the program</title>

    <sect2>
    <title>The simple way</title>
    <para>The simplest way to run <application>BAli-Phy</application> is
    to invoke the <command>bali-phy</command> executable directly:

<screen><prompt>%</prompt> <userinput>bali-phy <replaceable>sequence-file</replaceable> --data-dir <replaceable>somewhere</replaceable>/bali-phy-1.9.8/Data</userinput>
</screen>

    Here <replaceable>sequence-file</replaceable> is a FASTA or PHYLIP
    file containing the sequences you wish to analyze.  It should end
    in <userinput>.fasta</userinput> or <userinput>.phy</userinput> to
    indicate which format it is using.  Here
    <replaceable>somewhere</replaceable> stands for the directory where you
    extracted the bali-phy archive.</para>

    <note>
      <para>If your FASTA file has blank lines, then
      <command>bali-phy</command> will quit reading the file when it
      sees them.  You must remove blank lines from your FASTA files,
      or you will see errors complaining that too few sequences have
      been provided.</para>
    </note>

    <para>If you don't specify where the data directory is, then
    <application>BAli-Phy</application> assumes that it is at
    <filename>./Data</filename>.  To avoid specifying the location of
    the directory every time, you may make a symbolic link (a
    "shortcut"), or just make your own local copy of the data directory.</para>

    <para>To use a symbolic link, try the following:

    <screen><prompt>%</prompt> <userinput>ln -s <replaceable>somewhere</replaceable>/bali-phy-1.9.8/Data ./Data</userinput></screen>

    To make your own local copy, try this instead.

    <screen><prompt>%</prompt> <userinput>cp -r <replaceable>somewhere</replaceable>/bali-phy-1.9.8/Data ./Data</userinput></screen>

    Then, in the future you can just type:

    <screen><prompt>%</prompt> <userinput>bali-phy <replaceable>sequence-file</replaceable></userinput></screen>

    </para>

    </sect2>

    <sect2>
      <title>Running long simulations</title>
    <para>In order to run a <command>bali-phy</command> for long
    periods of time, some modifications to the above commands may be
    necessary.

    <orderedlist>
      <listitem><para>On some systems, the simulation will always
      quit after 20 minutes when run from the command line.  It may
      give an error message saying "CPU time limit exceeded".  This is
      helpful for interactive programs, but annoying for simulations.
      Using the BASH shell you use the following to find out the CPU
      time limit (in seconds):
      <screen><prompt>%</prompt> <userinput>ulimit -t</userinput></screen>
      To change this, you may type:
      <screen><prompt>%</prompt> <userinput>ulimit -t unlimited</userinput></screen>
      Then check the CPU time limit again.  If it says "unlimited"
      then you can run <application>BAli-Phy</application> without a
      CPU time limit.  If not, then you cannot change the limit
      yourself: ask your system administrator to change the limit for you.
      </para></listitem>

      <listitem><para>The simulation may terminate when you log out,
      making it difficult to run overnight jobs.  To prevent this, run
      the simulation using the <command>nohup</command> command as
      follows: 
      <screen><prompt>%</prompt> <userinput>nohup bali-phy <replaceable>sequence-file</replaceable></userinput></screen>
      </para></listitem>

      <listitem><para>On an SGE cluster, you must submit jobs using
      the <command>qsub</command> command.  I have provided a sample
      script to invoke <command>qsub</command> called
      <command>bali-phy.sh</command>.  It call invokes
      <command>qsub</command> on another script called
      <command>sge-run.sh</command>.
      </para></listitem>

    </orderedlist>
    If you are using another kind of cluster, then you must find out
    how to submit jobs on that cluster.
    </para>
    </sect2>
  </sect1>
  
  <sect1>
    <title>Command-line options</title>

    <sect2>
      <title>Usage</title>

      <para>The syntax for the program is:</para>

      <cmdsynopsis>
	<command>bali-phy</command>
	<arg choice='req'><replaceable>sequence-file</replaceable></arg>
	<arg>OPTIONS</arg>
      </cmdsynopsis>

      <para>The sequence file is the only required argument.  It can
      be either a FASTA (*.fasta) file or a PHYLIP (*.phy) file.  The
      file must end in one of these two suffixes or
      <application>BAli-Phy</application> won't know how to read
      it. In addition your FASTA files should not contain any blank
      lines.</para> 

      <para>The optional arguments are described below.</para>
	
    </sect2>

    <sect2>
      <title>General options</title>
      
      <variablelist>

	<varlistentry>
	  <term><option>--help</option></term>
	  <listitem><para>Show help message.</para></listitem>
	</varlistentry>


	<varlistentry>
	  <term><option>--version</option></term>
	  <listitem><para>Show version information.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--show-only</option></term>
	  <listitem><para>Analyze initial values and exit.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--data-dir <replaceable>directory</replaceable></option></term>
	  <listitem><para>Specify the data directory.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--seed <replaceable>seed</replaceable></option></term>
	  <listitem><para>Use the specified seed to initialize the
	  random number generator.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--align-constraint <replaceable>file</replaceable></option></term>
	  <listitem><para>Specify a file with alignment constraints</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--traditional</option></term>
	  <listitem><para>Fix the alignment and don't model indels.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--letters star</option></term>
	  <listitem><para>Use a star tree for the substitution model.</para></listitem>
	</varlistentry>


      </variablelist>
    </sect2>

    <sect2>
      <title>MCMC options</title>

      <variablelist>
	<varlistentry>
	  <term><option>--iterations <replaceable>number=100000</replaceable></option></term>
	  <listitem><para>Specify the number of iterations to run.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--subsample <replaceable>factor=1</replaceable></option></term>
	  <listitem><para>Specify a factor by which to subsample.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--T <replaceable>temperature=1</replaceable></option></term>
	  <listitem><para>Specify a temperature for MCMCMC.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--enable <replaceable>move</replaceable></option></term>
	  <listitem>
	    <para>Enable a comma-separated list of transition kernels.</para>
	  </listitem>
	</varlistentry>

	  <varlistentry>
	  <term><option>--disable <replaceable>move</replaceable></option></term>
	  <listitem>
	    <para>Disable a comma-separated list of transition kernels.</para>
	  </listitem></varlistentry>

      </variablelist>
    </sect2>


    <sect2>
      <title>Parameter options</title>
      <variablelist>
	<varlistentry>
	  <term><option>--randomize-alignment</option></term>
	  <listitem><para>Randomly re-align sequences before use.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--internal +</option></term>
	  <listitem><para>Set all internal node entries wildcards initially.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--tree <replaceable>file</replaceable></option></term>
	  <listitem><para>Specify file with initial tree.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--set <replaceable>parameter=value</replaceable></option></term>
	  <listitem><para>Specify initial value of <replaceable>parameter</replaceable>.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--fix <replaceable>parameter[=value]</replaceable></option></term>
	  <listitem><para>Mark <replaceable>parameter</replaceable> fixed, and optionally specify a value.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--unfix <replaceable>parameter[=value]</replaceable></option></term>
	  <listitem><para>Mark <replaceable>parameter</replaceable> not fixed, and optionally specify an initial value.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--frequencies <replaceable>frequencies</replaceable></option></term>
	  <listitem><para>Specify initial frequencies: 'uniform','nucleotides', or a comma-separated list of frequencies.</para></listitem>
	</varlistentry>

      </variablelist>

    </sect2>

    <sect2>
      <title>Model options</title>

      <variablelist>
	<varlistentry>
	  <term><option>--alphabet <replaceable>name</replaceable></option></term>
	  <listitem><para>Specify the alphabet: DNA, RNA, Amino Acids, Amino Acids + stop, Triplets, Codons, or Codons + stop.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--smodel <replaceable>name</replaceable></option></term>
	  <listitem><para>Specify the substitution model.</para></listitem>
	</varlistentry>

	<varlistentry>
	  <term><option>--imodel <replaceable>name</replaceable></option></term>
	  <listitem><para>Specify the indel model.</para></listitem>
	</varlistentry>

      </variablelist>

    </sect2>


  </sect1>

  <sect1>
    <title>Examples</title>
    <para>Here are some examples which demonstrate how to run
    <application>BAli-PHy</application>.  These examples all assume
    that you are running <command>bali-phy</command> from a directory
    that contains a copy of the <filename>Data/</filename> directory
    that is distributed with <application>BAli-PHy</application>.</para>

    <example>
      <title>No frills</title>
      <para>Here we analyze the EF-Tu 5-taxon data set provided with
      the software.</para>
      <screen> <prompt>%</prompt> <userinput>bali-phy Data/EF-Tu/5d.fasta</userinput></screen>
    </example>

    <example>
      <title>Multiple-Rate Substitution Model</title>
      <para>We now modify the previous example by changing the
      substitution model to allow gamma-distributed rate variation and
      invariant sites.  The amount of rate variation and the fraction of
      invariant sites are estimated</para>
      
      <screen> <prompt>%</prompt> <userinput>bali-phy Data/EF-Tu/5d.fasta --smodel gamma+INV --randomize-alignment</userinput></screen></example>

    <example>
      <title>Fixed alignment</title>
      <para>Here we use the 5S rRNA 5-taxon data set provided with
      the software.  The alignment is fixed and the traditional
      likelihood model is used, making indels non-informative.  In
      addition, the transition kernel which samples nucleotide frequencies
      is disabled, fixing the nucleotide frequencies to empirical values
      estimated from the input sequences.
      </para> 

      <screen> <prompt>%</prompt> <userinput>bali-phy Data/5S-rRNA/5d.fasta --smodel pi=constant --traditional</userinput></screen>

    </example>
  </sect1>

  <sect1>
    <title>Input</title>

    <sect2>
      <title>Sequence formats</title>
      <para><application>BAli-PHy</application> can read in sequences
      and alignments in both FASTA and PHYLIP formats.  However, in
      FASTA format, the file must not contain blank lines between the
      sequences, because <application>BAli-PHy</application> will stop
      reading in sequences when it sees a blank line.
      </para>
    </sect2>

    <sect2>
      <title>Is my data set too large?</title>

      <para>Large data sets run more slowly than small data
      sets. We recommend a conservative starting point with few taxa
      and short sequence lengths.  You can then increase the size of
      your data set until a balance between speed and size is
      reached.</para> 

      <para>The number of samples that you need depends on whether you
      are primarily interested in obtaining a point estimate or in
      obtaining detailed measures of confidence and uncertainty.  For
      detailed measures of confidence and uncertainty you should
      obtain a minimum of 10,000 samples after the Markov chain
      converges.  For an estimate, you don't need very many samples
      after convergence.  (But you may need many samples to be sure
      that you've converged!)
      </para>

      <sect3>
	<title>Too many taxa?</title>

	<para><application>BAli-PHy</application> is quite CPU
	intensive, and so we recommend using 12 or fewer taxa in order
	to limit the time required to accumulate enough MCMC samples.
	We note that many phylogenetic hypotheses can be reduced to
	hypotheses concerning only four taxa.  We recommend initially
	removing as many taxa as possible from your data set.  You can
	then add taxa back into the data set after you have determined
	how much this will increase the duration of the run.</para>

      </sect3>

      <sect3>
	<title>Sequences too long?</title>

	<para>Aligning sequences takes $O(L^2)$ time and RAM, where 
	$L$ represents the sequence length.  Thus, doubling the length
	of the input sequences increases RAM requirements and run
	time by a factor of 4.  Therefore sequence lengths beyond
	750 letters may prove impractical due to limited RAM or the
	speed of the calculation.   For protein sequences,
	we recommend coding the sequences in terms of amino acids or
	codons, rather than nucleotides.</para>

	<para>However, you might try to see how long you can make your
	sequences before the attempt becomes impractical.</para>
      </sect3>

    </sect2>

  </sect1>

  <sect1>
    <title>Models</title>

    <sect2>
      <title>Substitution models</title>
      <para>All of <application>BAli-PHy</application>'s substitution
      models are mixtures of continuous-time Markov chains (CTMC).
      These mixtures can consist of the same CTMC model run at a
      mixture of rates (e.g. a gamma rate model) or parameters (e.g. a
      Yang M2 model), or even a mixture of different models.
      </para>

      <sect3>
	<title>Default substitution models</title>
	<para>If the substitution model is not specified, then the
	default model for the alphabet is used.  For DNA or RNA, the
	default model is HKY.  For Triplets, the default is HKYx3. For
        Codons, the default model is YangM0.  For AminoAcids, the
	default model is Empirical[WAG]. 
	</para>
      </sect3>

      <sect3>
	<title>Specifying a substitution model</title>

	<para>Substitution models are specified using a stack, as
	follows:
<userinput>Model[arg]+Model[arg]+...+Model[arg]</userinput>
        where each model uses the previous models as input.  Arguments
	are optional.
	</para>

      <para>The basic CTMC models are EQU, HKY, TN, GTR, Empirical, and YangM0.</para>

      <para>Model modifiers are gamma, INV, YangM2, YangM3, and YangM7.</para>
      </sect3>


      <sect3>
	<title>Examples</title>
	<para>Example: --smodel EQU --alphabet Triplets</para>
	<para>Example: --smodel HKY</para>
	<para>Example: --smodel TN+pi=constant</para>
	<para>Example: --smodel Empirical[WAG]+gamma+INV</para>
	<para>Example: --smodel YangM0 --alphabet Codons</para>
	<para>Example: --smodel YangM0+pi=nucleotides --alphabet Codons</para>
	<para>Example: --smodel YangM2 --alphabet Codons</para>
	<para>Example: --smodel YangM0[TN]+YangM2 --alphabet Codons</para>


      </sect3>

      <sect3>
	<title>CTMC Models</title>

	<para>All CTMC models can be characterized by transition rates
	$Q_{ij}$ from state $i$ to state $j$.  After a given time $t$
	the probability for transition from state $i$ to state $j$ is
	given by \[P(t)_{ij}=e^{Q_{ij} \times t}\] using a matrix exponential.</para>

	<para>The CTMC models used in
	<application>BAli-PHy</application> are all reversible.
	Traditionally, the rate matrix for these reversible models has
	been decomposed into a symmetric matrix $S$ and equilibrium
	frequencies $\pi$ as follows: 
	\[Q_{ij} = S_{ij}\times\pi_j\]
	The matrix $S$ is call the exchangability matrix, and
	represents how exchangeable letters $i$ and $j$ are
	independent of their frequencies.
	</para>
      </sect3>

      <sect3>
	<title>CTMC Frequency models</title>
	<para>The above decomposition can be generalized slightly to
	yield the following decomposition, where $f$ ranges from $0$ to $1$.
	\[Q_{ij} = S_{ij}\times\frac{\pi_j^f}{\pi_i^{1-f}},\]
	Here the parameter $f$ specifies the relative importance of
	unequal conservation ($f=0$) and unequal replacement ($f=1$) in
	maintaining the equilibrium frequencies $\pi$.  
	</para>
	<para>
	In fact, this can be generalized even further to \[ Q_{ij} =
	S_{ij}\times R(\pi)_{ij} \] where \[ \pi_i \times R_{ij} =
	\pi_j \times R_{ji}. \]
	</para>
	<para>These models can therefore be expressed as a combination
	of an "exchange model" (for $S$) and a "frequency model" (for
	$R$).
	</para>
      </sect3>

      <sect3>
	<title>Exchange Models</title>
	<para>
	</para>
      </sect3>
      

      <sect3>
	<title>Frequency Models</title>
	<para>
	</para>
	<table frame="none" rowsep="1">
	  <title>Frequency Models</title>
	  <tgroup cols='4'>
	    <colspec colnum="1" colname="col1" colwidth="1*"/>
	    <colspec colnum="2" colname="col2" colwidth="1*"/>
	    <colspec colnum="3" colname="col3" colwidth="1*"/>
	    <colspec colnum="4" colname="col4" colwidth="1*"/>
	  <thead><row>
	    <entry>Model</entry>
	    <entry>Alphabet</entry>
	    <entry>Parameters</entry>
	    <entry>Description</entry>
	  </row></thead>

	  <tbody>
	    <row>
	      <entry>
		<para><userinput>pi</userinput></para>
		<para>Simple frequency model</para>
	      </entry>
	      <entry>any</entry>
	      <entry>
		<para>$f$ (1)</para>
		<para>$\pi$ ($|\alpha|$) </para>
	      </entry>
	      <entry>$R_{ij} = \frac{\pi_j^f}{\pi_i^{1-f}}$.</entry>
	    </row>
	    <row>
	      <entry>
		<para><userinput>pi=nucleotides</userinput></para>
		<para>Independent nucleotide frequency model</para>
	      </entry>
	      <entry>Triplets</entry>
	      <entry>
		<para>$f$ (1)</para>
		<para>$\pi_N$ (4) </para>
	      </entry>
	      <entry>
		<para>$\pi_\alpha = \pi_i \pi_j \pi_k$</para>
		<para>$R_{\alpha\beta} = \frac{\pi_\beta^f}{\pi_\alpha^{1-f}}$.</para>
	      </entry>
	    </row>
	    <row>
	      <entry><userinput>pi=triplets</userinput></entry>
	      <entry>Triplets</entry>
	      <entry>
		<para>$f$ (1)</para>
		<para>$g$ (1)</para>
		<para>$\pi$ (4) </para>
		<para>$\nu$ ($|\alpha|$) </para>
	      </entry>
	      <entry>$R_{\alpha\beta} = \frac{{(\pi_i \pi_j
	      \pi_l)}^f}{{(\pi_i \pi_j \pi_k)}^{1-f}} \times \frac{\nu_\beta}{\nu_\alpha}$.</entry>
	    </row>
	    <row>
	      <entry><userinput>pi=amino acids?</userinput></entry>
	      <entry>Codons</entry>
	      <entry>$f$</entry>
	      <entry>$R_{ij} = \frac{\pi_j^f}{\pi_i^{1-f}}$.</entry>
	    </row>
	    <row>
	      <entry><userinput>pi=codons</userinput></entry>
	      <entry>Codons</entry>
	      <entry>$f$</entry>
	      <entry>$R_{ij} = \frac{\pi_j^f}{\pi_i^{1-f}}$.</entry>
	    </row>
	  </tbody>
	  </tgroup>
	</table>
      </sect3>
      


      <sect3>
	<title>Extended model descriptions</title>

	<para>All basic CTMC models are reversible, and can be
	characterized by rates \[Q_{ij} =
	S_{ij}\times\frac{\pi_j^f}{\pi_i^{1-f}},\] where $S$ is a symmetric
	matrix and $\pi$ denotes the equilibrium frequencies for the
	Markov chain.  The transition matrix for a time $t$ is then
	given by \[P(t)_{ij}=e^{Q_{ij} \times t},\] using a matrix exponential.</para>  

	<table frame="none" rowsep="1">
	  <title>Substitution Models</title>
	  <tgroup cols='4'>
	    <colspec colnum="1" colname="col1" colwidth="1*"/>
	    <colspec colnum="2" colname="col2" colwidth="1*"/>
	    <colspec colnum="3" colname="col3" colwidth="1*"/>
	    <colspec colnum="4" colname="col4" colwidth="1*"/>
	  <thead><row>
	    <entry>Model</entry>
	    <entry>Alphabet</entry>
	    <entry>Parameters</entry>
	    <entry>Description</entry>
	  </row></thead>

	  <tbody>
	    <row>
	      <entry><userinput>EQU</userinput></entry>
	      <entry>any</entry>
	      <entry>none</entry>
	      <entry>$S_{ij} = 1$ for every $i$ and $j$.</entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput>HKY</userinput></para>
		<para>Hasegawa, Kishino, Yano (1985)</para>
	      </entry>
	      <entry>DNA or RNA</entry>
	      <entry>$\kappa$: the ts/tv ratio.</entry>
	      <entry>
		<para>$S_{ij} = 1$ for transversions.</para>
		<para>$S_{ij} = \kappa$ for transitions.</para>
	      </entry>
	    </row>

	    <row>
	      <entry><para><userinput>TN</userinput></para><para>Tamura, Nei (1993)</para></entry>
	      <entry>DNA or RNA</entry>
	      <entry>
		<para>$\kappa_1$: the purine ts/tv ratio.</para>
		<para>$\kappa_2$: the pyrimidine ts/tv ratio.</para>
	      </entry>
	      <entry>
		<para>$S_{ij} = 1$ for transversions.</para>
		<para>$S_{ij} = \kappa_1$ for purine transitions.</para>
		<para>$S_{ij} = \kappa_2$ for pyrimidine transitions.</para>
	      </entry>
	    </row>

	    <row>
	      <entry><para><userinput>GTR</userinput></para><para>General Time-Reversible</para><para>Tavare (1986)</para></entry>
	      <entry>DNA or RNA</entry>
	      <entry>
		<para>$S_{i \ne j}$</para>
	      </entry>
	      <entry>
		<para>$\sum_{i \ne j}S_{ij}=1$.</para><para>(5 degrees of freedom).</para>

	      </entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput>Empirical[WAG]</userinput></para>
		<para>Whelan and Goldman (2001)</para>
	      </entry>
	      <entry>Amino Acids</entry>
	      <entry>
		<para>none.</para>
	      </entry>
	      <entry></entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput>YangM0</userinput></para>
		<para>Nielsen and Yang (1998)</para>
	      </entry>
	      <entry>Codons</entry>
	      <entry>
		<para>$\kappa$: the ts/tv ratio.</para>
		<para>$\omega$: the dn/ds ratio.</para>
	      </entry>
	      <entry>
		<para>$S_{\alpha\beta} = 0$ for changes of more than one nucleotide.</para>
		<para>$S_{\alpha\beta} = 1$ for synonymous transversions.</para>
		<para>$S_{\alpha\beta} = \omega$ for non-synonymous transversions.</para>

		<para>$S_{\alpha\beta} = \kappa$ for synonymous transitions.</para>
		<para>$S_{\alpha\beta} = \omega\kappa$ for non-synonymous transitions.</para>
	      </entry> 
	    </row>

	    <row>
	      <entry>
		<para><userinput>YangM0[<replaceable>nuc-model</replaceable>]</userinput></para>
		<para>Nielsen and Yang (1998)</para>
	      </entry>
	      <entry>Codons</entry>
	      <entry>
		<para><replaceable>nuc-model</replaceable> parameters.</para>
		<para>$\omega$: the dn/ds ratio</para>
	      </entry>
	      <entry>
		<para>Setting <replaceable>nuc-model</replaceable>=HKY
		gives the standard M0 model.  Setting
		<replaceable>nuc-model</replaceable>=TN gives a codon
		model with two transition rates.</para>
		<para>If the nuc-model has transition matrix
		$S^\prime_{ij}$ on nucleotides, then:</para>

		<para>$S_{\alpha\beta} = 0$ for changes of more than one nucleotide.</para>
		<para>$S_{\alpha\beta} = S^\prime_{ij}$ for synonymous changes.</para>
		<para>$S_{\alpha\beta} = \omega S^\prime_{ij}$ for non-synonymous changes.</para>
	      </entry> 
	    </row>

	    <row>
	      <entry>
		<para><userinput>YangM2</userinput></para>
		<para><userinput><replaceable>sub-model</replaceable> + YangM2</userinput></para>
		<para>Yang, et. al. (2000)</para>
	      </entry>
	      <entry>Codons</entry>
	      <entry>
		<para>$\kappa$: the ts/tv ratio</para>
		<para>$p_1, p_2, p_3$: bin frequencies.</para>
		<para>$\omega_3$: value of $\omega$ in bin 2.</para>
	      </entry>
	      <entry>
	      <para>$\Omega=\omega_i$ with probability $p_i$.</para>
	      <para>$\omega_1 = 0$, $\omega_2 = 1$.</para>
	      <para>The default for <replaceable>sub-model</replaceable> is YangM0.</para>
	      </entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput>YangM3[$n$]</userinput></para>
		<para><userinput><replaceable>sub-model</replaceable> + YangM3[$n$]</userinput></para>
		<para>Yang, et. al. (2000)</para>
	      </entry>
	      <entry>Codons</entry>
	      <entry>
		<para>$\kappa$: the ts/tv ratio</para>
		<para>$p_1, \ldots, p_n$: bin frequencies.</para>
		<para>$\omega_1, \ldots, \omega_n$: values of $\omega$.</para>
	      </entry>
	      <entry>
	      <para>$\Omega=\omega_i$ with probability $p_i$.</para>
	      </entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput>YangM7[$n$]</userinput></para>
		<para><userinput><replaceable>sub-model</replaceable> + YangM7[$n$]</userinput></para>
		<para>Yang, et. al. (2000)</para>
	      </entry>
	      <entry>Codons</entry>
	      <entry>
		<para>$\mu$: mean of the Beta distribution.</para>
		<para>$\sigma/\mu$: noise to signal ratio for Beta.</para>
	      </entry>
	      <entry>
	      <para>$\Omega \sim Beta(\mu,\sigma)$.</para>
	      <para>A discrete approximation to the Beta with $n$
     	            bins is used.</para>
	      </entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput><replaceable>sub-model</replaceable> + gamma[$n$]</userinput></para>
		<para>Yang (1994)</para>
	      </entry>
	      <entry><replaceable>sub-model</replaceable> alphabet</entry>
	      <entry>
		<para>$\sigma/\mu$: noise to signal ratio for $\Gamma$.</para>
	      </entry>
	      <entry>
	      <para>rate $\sim \Gamma(\mu=1,\sigma)$.</para>
	      <para>A discrete approximation to the $\Gamma$ with $n$
     	            bins is used.</para>
	      </entry>
	    </row>

	    <row>
	      <entry>
		<para><userinput><replaceable>sub-model</replaceable> + INV</userinput></para>
	      </entry>
	      <entry><replaceable>sub-model</replaceable> alphabet</entry>
	      <entry>
		<para>$p$: invariant fraction.</para>
	      </entry>
	      <entry>
	      <para>A fraction $p$ of sites do not allow substitutions.</para>
	      </entry>
	    </row>

	  </tbody>

	  </tgroup>
	</table>

      </sect3>
    </sect2>

    <sect2>
      <title>Indel models</title>
      <para>The current models are simple, fragments, and fragments+T.  The
      default is fragments+T.</para>
    </sect2>

    <sect2>
      <title>Alignment constraints</title>
      <para>To pin columns of the alignment, specify alignment
      constraints in a file as follows: </para>

      <orderedlist inheritnum="ignore" continuation="restarts">
	<listitem><para>Use the argument
	<userinput>--align-constraint <replaceable>filename</replaceable></userinput></para></listitem> 

	<listitem><para>The filename refers to a file in which each
	line represents a constraint.</para></listitem> 

      </orderedlist>

      <para>The first line of the file is a header consisting of an
   ordered list of sequence names separated by spaces. Each subsequent line
   consists of a space-separated list of sequence positions, with the first position
   corresponding to the first leaf sequence, the second position
   corresponding to the second leaf sequence, etc. Thus, if there are
   &lt;n&gt; leaf taxa, then each line corresponds to a
   space-separated list of &lt;n&gt; integers.</para>

      <para>For example, the line</para>

      <programlisting format="linespecific">1 2 2</programlisting>

      <para>means that position 1 of leaf sequence 1 is aligned to
      position 2 of leaf sequences 2 and 3. Note that the first
      position in a sequence is position 0.</para> 

      <para>Optionally, one may use a '-' instead of an integer, which
      denotes a lack of constraint for that sequence. This can be
      useful as follows:</para> 

<programlisting format="linespecific">2 2 - - 
- - 2 2
</programlisting>

      <para>The above constraints force alignment between position 2
   of sequences 1 and 2, and between position 2 of sequence 3 and
   4.</para>
    </sect2>
  </sect1>

  <sect1>
    <title>Output</title>

    <sect2>
      <title>Output directory</title>
      <para><application>BAli-Phy</application> creates a new directory
      to store its output files in each time it is run.  By default, the
      directory name is the name of the sequence file, with a number
      added on the end. <application>BAli-Phy</application> first checks
      if there is already a directory called <replaceable>file</replaceable>-1/,
      and then moves on to <replaceable>file</replaceable>-2/,
      etc. until it finds an unused directory name.</para>
      
      <para>You can specify a different name to use instead of the
      sequence-file name by using the <userinput>--name</userinput> option.</para>
    </sect2>

    <sect2>
      <title>Output files</title>
      <para><application>BAli-PHy</application> produces the following output
      files inside the directory that it creates..  For the last two
      files, each line in these files corresponds to one iteration.</para>
      
      <variablelist>
	<varlistentry>
	  <term>1.out</term>
	  <listitem>
	    <para>Iteration numbers, alignments, and probabilities.</para>
	  </listitem>
	</varlistentry>
	
	<varlistentry>
	  <term>1.MAP</term>
	  <listitem>
	    <para>successive estimates of the MAP point</para>
	  </listitem>
	</varlistentry>
	
	<varlistentry>
	  <term>1.p</term>
	  <listitem>
	    <para>Scalar parameters: indel and substitution parameters, etc.</para>
	  </listitem>
	</varlistentry>
	
	<varlistentry>
	  <term>1.trees</term>
	  <listitem>
	    <para>tree samples</para>
	  </listitem>
	</varlistentry>
	
      </variablelist>
      
    </sect2>
  </sect1>

    <sect1>
      <title>Analyzing the output</title>
      
      <sect2>
	<title>Running the analysis</title>
      <para>Copy (or link, using <command>ln -s</command>) the file
      <filename>bin/GNUmakefile</filename> into the current
      directory. Then run the command:

      <screen> <prompt>%</prompt> <userinput>SKIP=<replaceable>burn-in</replaceable> make</userinput></screen>

      or

      <screen> <prompt>%</prompt> <userinput>SKIP=<replaceable>burn-in</replaceable> SIZE=<replaceable>iterations</replaceable> make</userinput></screen>

      Here, <replaceable>burn-in</replaceable> represents the
      number of iterations to skip as burn-in, and
      <replaceable>iterations</replaceable> represents the maximum
      number of iterations to use in the analysis. In order for this
      to work, you must have having built the tools in the
      <filename>tools/</filename> directory and have placed them in
      your path.</para>

      <para>Running the analysis will produce the three directories:
      <filename>Results/</filename>, <filename>Mixing</filename>, and
      <filename>Work/</filename>.  The <filename>Results/</filename>
      directory contains tree and alignment estimates and confidence
      levels.   The <filename>Mixing/</filename> directory contains various
      measures of whether the chain ran long enough given its Mixing.
      The <filename>Work/</filename> directory contains various
      intermediate files that you probably do not need.</para>


      </sect2>

      <sect2>

	<title>Results</title>

	<para>Running the above command will produce the following files in
	the <filename>Results/</filename> directory:</para>

      <variablelist>

	<varlistentry><term>analysis</term><listitem>
	<para>A description of the analysis:  burn-in, length, time completed.
	</para></listitem></varlistentry>

	<varlistentry><term>Report</term><listitem>
	<para>A summary of results: posterior means and credible intervals,
	etc..</para>
	</listitem></varlistentry>

	<varlistentry><term>consensus</term><listitem>
	<para>Summary of MAP and consensus topologies, as well as supported
	partitions. </para>
	</listitem></varlistentry>

	<varlistentry><term>c-levels.plot</term><listitem>
	<para>The number of partitions supported at each LOD level.</para>
	</listitem></varlistentry>

	<varlistentry><term>c<replaceable>level</replaceable>.topology</term><listitem>
	<para>The consensus topology at level
	<replaceable>level</replaceable> (Newick format)</para> 
	</listitem></varlistentry>

	<varlistentry><term>c50.tree</term><listitem>
	<para>The majority consensus topology + branch lengths (Newick format)</para> 
	</listitem></varlistentry>

	<varlistentry><term>MAP.topology</term><listitem>
	<para>An estimate of the MAP tree (Newick format)</para>
	</listitem></varlistentry>

	<varlistentry><term>MAP.tree</term><listitem>
	<para>An estimate of the MAP topology + branch lengths (Newick format)</para>
	</listitem></varlistentry>

	<varlistentry><term>MAP.fasta</term><listitem>
	<para>An estimate of the MAP alignment, w/ taxa sorted by similarity.
	</para></listitem></varlistentry>

	<varlistentry><term>MAP.phy</term><listitem>
	<para>An estimate of the MAP alignment, w/ taxa sorted by similarity.
	</para></listitem></varlistentry>

      </variablelist>

      <para>In addition, if you type <userinput>SKIP=<replaceable>burn-in</replaceable> make
   Results/MAP-AU.html</userinput>, the following files will be produced:</para>

      <variablelist>

	<varlistentry><term>MAP-AU.html</term><listitem><para>An AU plot
    </para></listitem></varlistentry>

	<varlistentry><term>MAP-AU.prob</term><listitem><para>The probabilities for each letter in the AU plot
    </para></listitem></varlistentry>

      </variablelist>

    </sect2>

    <sect2>
      <title>Mixing</title>

      <para>In addition, the following files will be produced in the
      <filename>Mixing/</filename> directory:</para> 

      <para></para>
      <variablelist>

	<varlistentry><term>partitions.bs</term><listitem>
	<para>Confidence intervals on the support for partitions, generated
	using a block bootstrap.</para>
	</listitem></varlistentry>

	<varlistentry><term>SRQ.plot</term><listitem><para>A collection of
	SRQ plots for the supported partitions.
    </para></listitem></varlistentry>

	<varlistentry><term>c50.plot</term><listitem><para>An
	SRQ plot for the majority consensus tree.
    </para></listitem></varlistentry>


      </variablelist>

      <para>Plots can be viewed by typing <userinput>plot
      '<replaceable>file</replaceable>' with lines</userinput> in
      <application>gnuplot</application>.</para>
    </sect2>


  </sect1>


  <sect1>
    <title>Auxiliary tools</title>

    <sect2>
      <title>trees-consensus</title>
      <para>Usage: trees-consensus <replaceable>file</replaceable>
      [OPTIONS] </para>
      <para>This program analyzes the tree sample contained in
      <replaceable>file1</replaceable>.  It reports the MAP topology, the
      supported taxa partitions (including partial partitions), and the
      majority consensus topology.
      </para> 
    </sect2>

    <sect2>
      <title>trees-bootstrap</title>
      <para>Usage: trees-bootstrap <replaceable>file1</replaceable>
      [<replaceable>file2</replaceable> ... ] --predicates
      <replaceable>predicate-file</replaceable> [OPTIONS] </para>
      <para>This program analyzes the tree samples contained in
      <replaceable>file1</replaceable>, <replaceable>file2</replaceable>,
      etc.  It gives the support of each tree sample for each predicate in
      <replaceable>predicate-file</replaceable>, and reports a confidence
      interval based on the block bootstrap.
      </para> 

      <para>Each predicate is the intersection of a set of partitions, and
      is specified as a list of partitions or (multifurcating) trees, one
      per line.  Predicates are separated by blank lines.
      </para>
    </sect2>

    <sect2>
      <title>trees-to-SRQ</title>

      <para>Usage: trees-to-SRQ <replaceable>predicate-file</replaceable> [OPTIONS] <replaceable>trees-file</replaceable> </para>

      <para>This program analyzes the tree samples contained in
      <replaceable>trees-file</replaceable>.  It uses them to produce an
      SRQ plot for each predicate in
      <replaceable>predicate-file</replaceable>.  Plots are produced in
      <application>gnuplot</application> format, with one point per line
      and with plots separated by a blank line.</para>

      <para>If <userinput>--mode sum </userinput> is specified, then a "sum"
      plot is produced instead of an SRQ plot.  In this plot, the slope of
      the curve corresponds to the posterior probability of the event.  If the
      <userinput>--invert</userinput> option is used then the slope of the
      curve correspond to the probability of the inverse event.  This is
      recommended if the probability of the event is near 1.0, because the
      sum plot does not distinguish variation in probabilities near 1.0 well.
      </para>

    </sect2>

  </sect1>

</article>
