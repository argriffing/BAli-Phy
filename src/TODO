7. Re-organize todo, putting later stuff in 'ideas' not TODO

2. How much of the sequences is in each %-identity fraction?
  a) How much information is in each fraction?
  b) Can we combine measures of gappiness and %-identity to yield a
     measure of ambiguity? 

1. Implement general distributions - we need a way to have special distributions
   that are charaterized only by sigma/mu.
   (a) how do we want to handle multiple parameterizations of distributions?
       i) for example, the gamma as (a,b) and as (mu,s/mu)?
      ii) for example, log-normal as (mu,s/mu) and as (lmu,lsigma)?
   (b) Fix the Uniform distibution to have max range (0,2) ?

2. Hmm... It seems that we have a scale parameter in each case...
   And (except for mixture distributions) a width parameter.
   (a) If we had an exponential distribution, then we have s/mu=1 by def.
   (b) The set_rate( ) function for MultiModels

3. Do we want to have moments?
   (a) m[n] = \prod_0^n-1 (\alpha+i)\times\beta for gamma
   (b) m[n] = exp(n\times\mu+n^2d^2/2) for log-normal
   (c) m[n] = \prod_0^n-1 (\alpha+i)/(\alpha+\beta+i)

4. When setting parameters on (e.g.) the GTR model, set all relevant
   parameters at once?

2. Write a program to try to combine trees (sub-branches?)
   (a) Print out the tree of no-conflict branches
   (b) Show conflicting pairs of branches from each file.
   (c) Start with trees - no branches in the same file can conflict.

3. Handle Wiegman's insect sequences
   (a) Write a mixture-type model to handle this.
   (b) Implement different frequencies for INV sites.
   (c) But then we have to handle unique names for INV::fA and gamma[4]::fA
   (c) Take a tree SAMPLE.  (posterior sample?)

4. Implement multiple data partitions...  (on a branch)
  (a) More than one alignment + scaling between the trees
  (b) More than one substitution model?

5. Implement Correlated Site Classes.
  (a) Do the math.
  (b) Do the coding?

1. Estimate constraints using alignment-indices
  a) specify number of constraints
  b) no gaps nearby (distance W+G) from constraint
  c) difference from consensus = 1 (no shared differences)
  d) 
  e) percentage of sites w/ an indel
  f) print the column number in the comments of each row

5. Use a RJMCMC on a fixed alignment to model local changes in 'mu'
   +  or use a change-point model?
   +  or use a *nested* Change Point Model?
   + we need some way to find out if the gamma model "fits" well! (how
much of the variation is spatial?)

1. Test sampling of epsilon.  (Implement model where lambda & epsilon not coupled?)
  a) e-mail about the method for converting matrices from WAG to codon level.
2. Put "epsilon" on the "mean_indel_length" scale.
4. Do something about "Amino Acids"?  (Use an underscore)
5. Proposals and Priors
  a. use a parameter_names_ vector.
6. Output move stats in tracer-readable format. (or, at least, allow burn-in?)

7. How about having an alphabet option "AAA -" to indicate that this item is missing?
8. How about switching from '!' to '*' to indicate stop codons? 
   (And stop using * as a wildcard character? We could use '.' instead, based on regular expressions.
    And in most cases we can use N or X anyway.)
--------------------------------------------------------

-48. Indel model where we sum over all root locations: doesn't work for SPR?
  a. A mixture of P(A|root) doesn't factor into P(A[1]) * P(A[2]) * ... * P(A[B])
  b. We would have to augment the data with a root.

-46. Code an initial test for the same-frequencies assumption?
	- likelihood ratio test: sequences S have frequencies p
                                 sequence S[i] has frequencies q 
	- can we reject p=q?  How much is the actual difference?
        - or, find groups using neighbor-joining? 
          + (twice as many branches..)
	  + N^2 cost of computing the pairwise distances...
            - how to make semi-additive distances?

-45. Speed up likelihood calculations where there are lots of gaps??
  + If there is only one character then (at least for equilibrium processes)
    the cost should be constant.
  + If there is more than one character, then the  cost should be proportional to
    the number of branches that connect the non-gap characters.

-------------------------------------------------------
-41. Improve proposals: 
  + Specify the NUMBER of times we do each increment per iteration.
  + How can we reference other parameters of the model? (e.g. "mu")
  + How do we pass back information about move success from each move?
  + Can we have the move parameters converge to something?
    - Should this be in the PROPOSAL, or something governing the proposal?

-------------------------------------------------------
Before 1.9.9:

 * Implement tree constraints, alignment constraints, branch-length constraints. 
 * Don't crash on 'SKIP=<> make' in --traditional mode.
 * Allow specifying the location of GSL
 * Document 'what files are installed'
   (a) Describe where to find the installed example files.
 * Brief descriptions of some of the tools.
 * Debug with _GLIBCXX_DEBUG
 * Put sources up for anonymous subversion.

Before 2.0:
 * Do the autoconf magic to compile GSL in-tree.
-------------------------------------------------------
Questions:

 Q: How can the distribution of INV::p be so exponential? (AATS)
 A: Strong incorrect prior, not enought data!


-------------------------------------------------------

-40. Remove bitvector functions from tree.H!

-39. Why does tracer disagree on autocorrelation?

-38. Reading alignments:
     a) Complain about illegal characters (ASCII >=32 and <= 126) when
        reading alignments.
     b) Speed up time to read alignments.
          
-37. Improve trees-consensus
  + Compute the entire set of branches / counts for full partitions.
  + Compute the greedy tree using these counts.
  + Report the first 4(N-3) internal branches.
    - Also report the  branches in the greedy tree?
  + [FIX] Currently the number of sub-branches is capped at |c50|
  + [FIX] 'ratio' for sub-partitions when parent partitions are below the min.
  + store topology as list of locations in partition list?
   a) Would this save memory?
      Some, if some of full partitions have a high frequency.
   b) Would this save CPU time?  Examine each partition once instead of n times.
      [But this wouldn't help for sub-partitions, would it?]
   c) We could report the number of full partitions that we observe.

-34. Can we put a Gamma prior on branch length? (Conjugate?)

-30. Find out where the system time is coming from...
  + Find out the system time for a test case with DP full-matrix.
  + Where is the system time coming from? (Use oprofile?)

-27. More data sets - more proteins!  
     Read some more tree-of-life papers.
	Which protein was it that supposedly did not saturate?  Can we plot saturation?  
	Can we determine the equilibrium distribution (effective entropy) ... by thinking about T ... ?

-24. Benchmarking of mixing... 
  a) try with alignment fixed
  b) look at log autocorrelation and effective sample sizes for distances
     between 2 nodes + sum all branches + sum all paths
  c) compare mixing with few taxa, many taxa...
  d) handle alignment predicates in the SRQ plot.
     can we output residues which are mixing badly?

-22. FastLSA with Constraints:
  + We have a series of tiles that are linked at their corners.
    - In each tile, we go forward given the (0,0) corner
    - We sample backwards given the (last) state at the (I,J) corner.
    - We need to SHARE the emission probabilities between tiles.

-21. Complain if a tree has two leaves with the same name?
     (We crash on 'standardize' currently.)

-20. MCMCMC
    a) implement the forking code / temperature identifier.
    b) implement the separate random number generators.

-16. Compare estimates w/ MrBayes
     a) compare mixing, topologies, branch lengths, speed, etc.
     b) globin / EF-Tu 48b / P1-123 / P1-1234

-13. Make a program to compare two alignment samples. [N=1 is a special case]
     a) If P(i~j) > 0.5, then compute P_1(i~j)P_2(i!~j)
     b) Report by marking a consensus alignment with a continuous or thresh-hold color scheme.
     c) How does a distribution of alignment CONSENSII fit into this?
 
-12. Allow alignment-gild to annotate an alignment-consensus

-10. Make trees-bootstrap.C print trees instead of collections of full partitions.

-7. Sanitize use of the MAP tree when the count is 1. Report a median?
     + but the estimated probability of the median could be 0.
     + this matters only when computing branch lengths?

-3. Think more carefully about using walk_tree_path
     + when changing the topology...  does this have to be reversible?

------
1. Plot #topologies in confidence interval (0,p) vs p. (e.g. sort topologies)
    Then plot this versus time...

    Also compare this between runs...

    Figure out burnin for bacteria data sets...

2. Test with STLport, libstdc++ debugging code.

3. Indel model - fix so that prior probabilities exist!
    a) for now, we condition on leaf sequence lengths.

4. Start making some "nice" pictures to put up on the website.
    a) include pictures to give to Dr. Lake's lab.

5. Allow branch length mixtures?

6. Improve mixing for multi_freq model by sampling between columns.
    a) well, firstly, why does convergence take SOO long?
    b) if we could easily just change bin probabilities, then that would
       make it easier to attack this problem by increasing the number
       of MH steps we do.

7. Make a hash function for sub-partitions that is 
     (hash(left mask) * hash(right mask)), where the hash() function
     is a hash function for bitmasks and involves addition, not
     multiplication. 


------
A. sub-partitions: 

*B. How to make priors specified on command line?

C. Debugging framework 
   a) platforms
     1) intel c++
     2) cygwin
     3) MS Visual C++
  b) stlport
  c) compare
     1) MrBayes
     2) bambe
     3) BEAST
  d) mudflap -> alter GNUmakefile so that this is easy

*D. Make alignment-draw be able to output EPS

E. how does P(data|model) depend on number of frequency bins?

F. Allow alignment to contain only 2 sequences?

G. Find a better distance measure for alignment-median?

*H. implement: new framework for fixing things
	a) disable=alignment  -> fixed=A fixed=alignment
	b) disable=alignment_branch -> fixed=A- fixed=leaves-alignment
	c) disable=tree             -> fixed=tau fixed=topology
	d) disable=frequencies      -> fixed=pi  fixed=frequencies

------------------------------



I. fix: gamma+frequency+INV

II. model: Make INV categories depend on letters, somehow...

III. sample lengths/topologies MORE often when alignment sampling also?

IV. A new ggobi is available!  Try multidimensional scaling...

V. Start proposing INV::p on the log odds scale. It is OK to change
the prior, because we never want to use it  differently.


------------------------------------------------------------------------------
[FIXED] s-parameters aren't accepted/sampled often enough.

[FIXED] implement: 'f' parameter in ReversibleMarkov models

[FIXED] check: memory usage -> EF-Tu/12d ~ 120 Mb RAM ?
        (memory usage decreased)

[DONE]  make a separate DEBUG_CACHING

[DONE]  make change_parameters() debugging code call a function which outputs
        substitution parameters.

[DONE]  allow comments in the alignment constraint file, and make
        the alignment index program spit out the actual letters for each
        column as comments. 

[DONE]  Make tree-dist-compare consider all partitions w/ PP > 0.5

[DONE]  Stop using PHYLIP.  Dealing with truncated names is too painful!

[DONE]  alignment-gild: use list<alignment> instead of vector<>...

[DONE]  alignment-draw: implement bg-colors=type, bg-whiteness = uncertainty

[DONE]  Use boost::program_options and remove arguments.{H,C}

[DONE]  Estimate best alignment by finding the alignment with the greatest
   sum of PP(i ~ j) for all aligned pairs (i,j);

[DONE]  Fix "showonly" - think of better name. (urgh - picked show-only)

[DONE]  Fix setting of 'fixed' flags in model.H/C, to allow 'unfixing' parameters
        and also modifying fixed/unfixed for sub-models.

[DONE]  Fix smodel parameters aren't being sampled.

[DONE]  Make A3-stripped.fasta work with alphabet=Codons

[DONE]  Implement YangM2

[DONE]  Stop requiring --random-tree-ok


[DONE]  Implement sorting of subA columns to provide stable names when columns are re-ordered.
[DONE]  Remove invalidation in 3way sampling, 5way sampling, and tri-sampling.

[DONE]  tree-dist-compare: 
	a) by default, only show 1 topology per file
	b) allow consensus to take a comma-separated list of values

[DONE] add '--first' and '--last' arguments to alignment-find

[DONE] Update tools to use boost::program_options.

[DONE] Fix tools/analyze-distances: make an interface to get likelihoods by column...

[DONE] Record when each constraint is first satisfied, and when all are satisfied
[DONE] Make align-constraint= work SPR_and_A

[DONE] Get intel compiler

[DONE] alignment-draw: put all colormaps on the same scale by making colormaps
       nested and colorschemes not nested.

[DONE] alignment-draw: allow names like --color-scheme=AA+contrast+whiten --scale LOD

[DONE] Allow name[arg] formath in smodel description -> Empirical[wag] + gamma[4]

[DONE] Make alignment-draw simply use 'plain' if AU-file not specified.

[DONE] Better multi_freq model.  
    * frequency will be the frequency of the sub-model.
    * sum_l a(m,l) = 1
    * distribution(m) = sum_; a(m,l)*f(l)
    * f(m,l) = a(m,l) * f(l) / distribution(m)
    * two moves:
      - fiddle frequencies (as normal)
      - fiddle each row (one letter, all models)
    * prior -> each row is dirichlet

[DONE] 	Integrating joint-A-T and the 'hack' to set indel prior parameters.

        
[DONE] Report constraints satisfied by initial alignment/tree.

[DONE] Don't report constraints satisfied if there aren't any.

[DONE] Change DualModel to MixtureModel[n]
        a) make a way of specifying the priors

[DONE] Fix gamma model so that we can put MultiModels underneath it w/o crashing!

[DONE] Convert probabilities to efloat_t in substitution, model priors, etc.

[DONE] Make standardized checks for indexing problems in sample-node / sample-two-nodes.

[DONE] Rename YangCodonModel to YangM0

[DONE] Using regular FP math for DP, with a scaling factor per cell.
       * move created of std::vector< > temporary variables out of loops.
       * switched to using std::valarray< > instead of std::vector< > 
         for state_{array,matrix}
       * inlined di,dj,dk,dl,dc in 3way.H from 3way.C
       * stopped copying a whole bunch of state_{array,matrix}'s around
       * move initialization of s12_sub(,) to forward_cell( ).

[DONE] DPmatrix speedup - phase 2
       * add a boundary, and shift everything by (+1,+1)
       i then we can remove check to optionally break out of the inner loop
       * side effect is that we initialize as we go, even states whose predecessor
         is out of the square.
       * initialize boundaries in forward_square, with special case for (1,1)=S(0,0)
       * special case sample_path() for DPmatrixConstrained( ) because we don't initialize
         illegeal state / location pairs.
      ii REMOVE THE FULL INITIALIZATION in DPmatrix::DPmatrix( )!

       Also:
       * shift s1_sub, s2_sub, s12_sub to matrix coordinates by adding padding to the beginning.

[DONE] Fix sub-alignment indices
  a) make A?::construct reconstruct subA indices
     - indices are uniquely defined - reconstructing from scratch
       should not change them.
     - indices are dependant only on leaf-taxa alignment & tree
  b) reconstruct subA indices when tree changes 
     - sample-tri.C for sample-topology-SPR.C

[DONE] Don't store more that 1 DPmatrix at a time - free memory afterwards unless debugging.

[DONE] Add asymmetric MH proposal capability.

[DONE] Convert all densities to use log_double_t for *_pdf().

[DONE] Implement asymmetric proposals for sample_*_multi( );

  b) implement checking when using this routine

[DONE] Implement choose_MH( ).

[DONE] Write alignment-consensus.

[DONE] Start fiddling the 'f' parameter, but making it fixed by default.

[DONE] Allow specifying a non-HKY model underneath the Yang M0 model.

[DONE] (a) Estimate branch lengths for multifurcating trees
       (b) Pass the c50 tree w/ lengths to alignment-reorder

[DONE] Given a c50 tree, keep partitions that imply sub-partitions.
       If two partitions imply a sub-partitions, only keep the one
         with the smallest min(count(group1),count(group2))

[DONE] tree_sample cleanup part I.
       * Store leaf-sized bitmasks per branch.
       * Store leaf names once per tree_sample, not per-tree.
       * Reduces 29Mb -> 6Mb (factor of 5 decrease)

[DONE] Call get_Ml_sub_partitions_and_counts only ONCE.
       * pull out combinations of badly rooted branches.
       * pull out (A,B):-X as (-A-X) and (-B-X)
       * cache computed PP for all sub-partitions,
       * find M[l] branches at each level l in the cache

[DONE] Plot the number of supported branches for EVERY level.  
       Then we could branches vs level, which is less sensitive
        than looking at presence or absences at a SINGLE level.

[DONE] Do a better job at finding the minimal number of c50 branches
        that imply a partition.

[DONE] Make a 'Mixing' directory in addition to 'Results' and 'Work'.

[DONE] tree-to-srq: take partitions as input, not just trees.

[DONE] Make a ??? letter for Codon alphabets.

[DONE] Remove '--with-stop', and add new alpabet names "Amino Acids + stop"
       and "Codons + stop"  

[DONE] Print blocksize, seed, and pseudo count on the same line in [ ].

[DONE] Separate tree-dist-compare into two programs: 
        a) trees-consensus estimates MAP and M[l] topologies for a
           single tree sample 
        b) trees-bootstrap bootstraps support for partitions, possibly
           from multiple tree samples.
          i) speed up the trees-bootstrap by using the same samples
             for each predicate, so that we need only generate the
             random numbers once.

[DONE] Print N or X instead of *

[DONE] Stop computing leaf partition sets.
       Only compute+cache partition masks when we need them.

[DONE] Cleanup "unused parameter" and other warnings.

[DONE] trees-bootstrap:
       
     a) make the number of samples in the bootstrap a parameter
     b) use pseudocounts if specified.

[DONE] Make tree a virtual public base class for SequenceTree and RootedTree?

[DONE] Implement letter classes.
       a) Allow reading Codon alphabet w/ individual letter wildcards.
       b) Handle letter classes in parsimony analysis.
       c) Allow letter classes in other places.

[DONE] Put Data/ under version control.

[DONE] alignment-cut

[DONE] Build Windows binaries (cywin now has gcc 3.4)

[DONE] Build MacOS binaries: 
   + 10.3.9 and 10.4.x + 
   + 10.3.x < 10.3.8

[DONE] Use just one genetic_code.dat (the RNA version.)

[DONE] Merge all continuous parameters into one file 'p' that can be
   read by tracer.

[DONE] Write to a file 'out' instead of cout.

[DONE] Improve mixing for branch length mean 'mu'

[DONE] Fix sampling of frequency parameters by using dirichlet proposal.

[DONE] Allow 'mu' to be fixed.

[DONE] Complain instead of overwriting files.

[DONE] Read arguments from a config file.

[DONE] Change confusing "--gaps=star" to "--traditional".
       Don't have an indel sub-model in this case.

[DONE] Create proposal objects like 'between(0,1,shift_gaussian)'

[DONE] Remove Model::fiddle() [ and also super_fiddle() ] and implement
       external proposals.

[DONE] Output number and length of gaps to Tracer file.

[DONE] Have bali-phy open a directory to store files in.

[DONE] Remove 'super_parameters_'

[DONE] Models/SuperModels: Only recalculate models that changed, and allow
                            recalc to avoid recalculating cached stuff when e.g. "mu"
                            changes.

[DONE] Read (unset) settings from ~/.bali-phy.

[DONE] Separate P(S,x) from start_pi(x)

[DONE] DISTRIBUTION of %-identity?

[DONE] Implement codon-frequencies from amino-acid frequencies [no codon  bias].

[DONE] Go back to permitting trees w/ (e.g. root) nodes of degree 2.

[DONE] Improve branch-mean-lengths

[DONE] Make HTML alignments use mono-space fonts.

[DONE] Remove 'Yang' from M? models. (code and options.)

[DONE] Handle consensus alignments in alignment-gild.

[DONE] Improve discretization of distributions.

[DONE] Forbid values of sigma/mu that are too large
       by using the discretization mean.

[DONE] Separate Data/ files and examples.

*IDEAS*

 - We need better ways to compute compute marginal likelihoods.

 - for HIV data, we want samples from DIFFERENT PATIENTS, not
   from the same patient, because recombination is limitted to
   within-patient samples.

   if we can avoid co-infection, then we are good!

   (a) check Shankarrapa samples from the HIV database...
   (b) ? ask Marc about asking people if we can use their data
       or asking questions about their data.

 - find some papers for the journal club?

 - introduce alphabet models - such as codon model frequencies depending
   on [A],[T],[G],and [C].  We allow them to deviate, but put evidence on
   them NOT deviating.

 - consider modelling functional divergence - Karin's branch problem?

 - for alignment - how do we balance "extra high rate of change on this branch"
   (e.g. different aa on each side ) with "unalign the two sides of this
   branch"?

 - if we can take a <X>% confidence region in tree space, then any strict
   consensus measure of that region would be an level-<X> consensus tree.

 - we could search for the <X>% of the samples that would give the most
   resolved tree.

 - consider a version of pair-HMM with 2x as many states: we would have a 
   "slow" and "fast" version of M,G1,G2 in which indels have different
   rates.

 -  more complex model: have 'slow' and 'fast' be properties of the
   individual letters in the state.  (gamma-distributed indel rates.)
   + this makes a "spatial" model, if it is done right.

 -  Homoplasy and variation in column frequencies.  
   a) have a 'two-letter' model for HIV sequence DNA.

 - "Autocorrelation" as a function of distance

   o graph distances as a function of the posterior LOD score of the events.

   o graph probability of the transition from 1->0 (or 1->0->1) vs time AND PP.

 - use proxy for Likelihood to propose new states.
   o look at the number of SPR changes required to reach "nearby" trees,
     and to move between "islands".=======
 -  graph distances as a function of the posterior LOD score of the events.

 -  IDEA #1: simulate P(Y|T,tau) as \prod P(Y[i][j]|T,tau)^n[i][j]
            where n[i][j] = 1/2**(D(i,j)-1) 
            wjere D(i,j) is the number of edges between nodes i and j.

 -  IDEA #2: Determine points C[i] as centers for n bins of a distribution.
            + bin boundaries will be at sqrt(C[i]*C{i+1]).
            + define f(x) = C[i] if x is in the i-th bin.
            + then we 
              - constrain E X = 1 under f(x).
              - minimize E |log(X) - log(f(X))|

	    + this will give us bins optimally spaced on the log scale.

    (Note: If the transform function is the quantile function, instead of the
     log function, then we regain the current standard behavior! :)

 - If we look at posterior rate distributions, then we will want to know
   how the rates are distributed spatially.  (This might explain why the
   shape of the rate distribution varies between proteins.)

   How much of the rate distribution can be explained by e.g. exposure
   to solvent?

   If we add alpha/beta/loop notation to each of the internal node residues,
   then this might help us get more realistic rates, as well as indel
   hot and cold spots.

 - How do indel hot and cold spots map to interior/exterior of 3D structure?

 - Can we label each residue with the probability that it will accept deletion?
   Can we label proposed indels with a relative probability of occurrence?
   (Invariant residues/blocks are easier, because they are never inserted.)
   Can we handle a model with both unequal proposals and acceptance rates?

 - If the invariant sites vary over time, we might achieve some fairly interesting
   decoupling of change from linear time.  If sites become invariant during some
   period of time, then they might change fairly little over a rather long time.
   If some sites become variable, then they might change a lot over a fairly short
   time.  If sites change their invariancy in blocks... then we could have an 
   interesting interaction of changes in selection and fitness effects over the
   tree.

 - Can we estimate selection pressure over the tree?  
   We could integrate out the parts we don't know.

 - Can we separate the alphabet/frequency model from the exchangeability
   model for substitution models?

   * This way, YangM0 doesn't have an HKY::f parameter.
   * This way, the *::f parameter is handled much more naturally.
   * This way, we can handle frequency parameters as parameters.
   * This way, we don't have a fixed *::f parameter, unless we need it.
   * This way, we can have more interesting codon frequency models.

 - If we have both coding and non-coding DNA from an organism (hopefully
   from a number of genes, and, I suppose, non-coding regions), then we
   could actually fit a model that determined the frequency of codons from
   the competing pressure of nucleotide and amino acide forces.

   Actually, we might need three different components:

   a) nucleotide mutation pressure
   b) nucleotide content selection pressure
   c) amino acid selection pressure

   Might only amino acid content change between genes?  In that case, we might
   be able to estiamte all the factors using only coding regions!

-  Model RNA as a sequence with variable equilibrium distributions...
   There are only 2^4 = 16 rate classes if everything is 0/1.
   Entropy???     

-  Site-dependent equilibrium frequencies:
  + Question: does entropy of frequencies affect branch lengths?
  + Combine saturation with (site-dependent) rate-change across the tree ?
  + Check effect of non-equivalent equilbrium frequencies.

- Quick ways to score gaps: tell Jeff.
   + Push gaps as high as possible in each column.
   + No nested gaps
   + Linear gaps

- Don't show SRQ or sum plots for partitions w/ less than <N=10> regenerations,
     a) But, perhaps the real issue is generating a confidence band for SRQ plots
     b) Develop an idea of how to do a statistical test based on SRQ plots...
        [ Find the worst sub-section - the flattest line that is longest ]
        [ This will give us the worst mixing rate that we can reject ]