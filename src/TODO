2. Estimate best alignment by finding the alignment with the greatest
   sum of PP(i ~ j) for all aligned pairs (i,j);

3. boost::program_options

4. Make alignment-draw be able to output EPS

5. implement: new framework for fixing things
	a) disable=alignment 
	a) disable=alignment
	b) disable=tree
	c) disable=frequencies

6. Debugging framework - test on other platforms
   Also, try with stlport again
   Also, compare some things with mrbayes, bambe

7. Stop using PHYLIP.  Dealing with truncated names is too painful!

8. Why did I think that I needed to invalidate branches on sample_nodes
   again?
   a) well, the INDEXING from alignment to conditional likelihood changes.
      but we recompute that anyway.

   b) the representation that we have depends only on the leaves

    * the problem is that ORDER of columns changes!  So, if LC(b,*) is 
      constructed from LC(b1,*) and LC(b2,*), I need a way of
      specifying the order of (-,+) and (+,-) columns that is
      independant of the alignment in order for sample_nodes not to
      affect LC(b,*).  

    * we can depend on the topologies of the subtrees under b1 and b2,
      because if one of them changed, it would be invalidated anyway,
      and thus so would b.  So, we could sort b1,..bn in increasing
      order by their first leaf node.  Then we would have a way of
      ordering columns that truly depends only on the leaves.
   

   Write in paper: we need a method for caching likelihood frequencies
   that does not depend on features of the alignment, like column
   number that may change w/o changing the conditional likelihoods.

9. Use read a sequence of FASTA alignments, find the last FASTA alignment...
10. alignment-draw: implement bg-colors=type, bg-whiteness = uncertainty
11. alignment-gild: use list<alignment> instead of vector<>...
12. remove print_phylip second argument, a boolean to not print ancestral taxa.
check: how does P(data|model) depend on number of frequency bins?
13. Fix setting of 'fixed' flags in model.H/C

fix: gamma+frequency+INV

model: Make INV categories depend on letters, somehow...

sample lengths/topologies MORE often when alignment sampling also?

A new ggobi is available!  Try multidimensional scaling...

Start proposing INV::p on the log odds scale.
It is OK to change the prior, because we never want to use it
differently.


------------------------------------------------------------------------------
[FIXED] s-parameters aren't accepted/sampled often enough.

[FIXED] implement: 'f' parameter in ReversibleMarkov models

[FIXED] check: memory usage -> EF-Tu/12d ~ 120 Mb RAM ?
        (memory usage decreased)

[DONE]  make a separate DEBUG_CACHING

[DONE]  make change_parameters() debugging code call a function which output
        substitution parameters.

[DONE]  allow comments in the alignment constraint file, and make
        the alignment index program spit out the actual letters for each
        column as comments. 


[DONE]  Make tree-dist-compare consider all partitions w/ PP > 0.5

