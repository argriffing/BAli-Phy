
// contains state info for alignments w/ n3 == '-'

int states1 = s1;

int bits1 = setbit(bits[character-1],3,s1 == present);
if (bitset(bits1,3))
  bits1 &= ~present;

s1 |= bits_to_states(bits1);

/* This works because
 A. If bit3 is present, then s1 == bits_to_states(bits1), which
     fills in every alignment from bits1.
 B. If bit3 is NOT present, then bits_to_states(bits1) contains
     bits for alignments only if they are present in that column
 This means that alignments that are present, but don't have bit3 set
  get over-written, hopefully with the same value!
*/

/*************************************************************/
//contains state info for alignments 0,1,2,3 if n4 or n5 is missing.
//contains state info for alignment 4 if n4 AND n5 are missing;

int states1 = s2;

/****** set the relevant bits *****/
int bits1 = bits[character-1];
bits1 = setbit(bits1,4,s1 & present10 == present10);
bits1 = setbit(bits1,5,s1 & present01 == present01);

/****** clears the state if alignments 0,1,4 if n4 is missing *****/
if (bitset(bits1,4))   // clear bits in alignments to calculate
  states1 &= ~present10;

/****** clears the state if alignments 2,3,4 if n5 is missing *****/
if (bitset(bits1,5))   // clear bits in alignments to calculate
  states1 &= ~present01;

// so alignment 4 is cleared if 
------------------------
